apiVersion: apps/v1
kind: Deployment
metadata:
  name: osmt-app-{{customerId}}
  labels:
    app: osmt-app
spec:
  selector:
    matchLabels:
      component: osmt-app
      app: osmt-app-{{customerId}}
  template:
    metadata:
      labels:
        component: osmt-app
        selector: osmt-app
        app: osmt-app-{{customerId}}
    spec:
      containers:
        - name: osmt-app
          image: 768428056394.dkr.ecr.us-west-2.amazonaws.com/beyond:osmt-latest
          imagePullPolicy: Always
          env:
            - name: ENVIRONMENT
              value: "apiserver,oauth2"
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PW
              valueFrom:
                secretKeyRef:
                  name: mysql-root
                  key: root-pw
            - name: MYSQL_DB_URI
              value: 'root:$(MYSQL_PW)@mysql-{{customerId}}.default.svc.cluster.local:3306'
            - name: REDIS_URI
              value: "redis-{{customerId}}.default.svc.cluster.local:6379"
            - name: ELASTICSEARCH_URI
              value: "http://elasticsearch-{{customerId}}.default.svc.cluster.local:9200"
            - name: OAUTH_ISSUER
              valueFrom:
                secretKeyRef:
                  name: okta
                  key: issuer
            - name: OAUTH_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: okta
                  key: audience
            - name: OAUTH_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: okta
                  key: client_id
            - name: OAUTH_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: okta
                  key: client_secret
            - name: BASE_DOMAIN
              value: "{{customerId}}.osmtpilot.openskillsnetwork.com"
            - name: MIGRATIONS_ENABLED
              value: "true"
          ports:
            - containerPort: 8080
              name: "ui"
---

apiVersion: v1
kind: Service
metadata:
  name: osmt-app-service-{{customerId}}
  labels:
    name: osmt-app-service
spec:
  ports:
    - port: 80
      targetPort: 8080
  clusterIP: None
  selector:
    app: osmt-app-{{customerId}}

---

# apiVersion: v1
# kind: Service
# metadata:
#  annotations:
    #TODO: Set up svc logging
#    service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "true"
#    service.beta.kubernetes.io/aws-load-balancer-access-log-emit-interval: "60"
#    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-name: "my-bucket"
#    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-prefix: "my-bucket-prefix/prod"
#  name: osmt-app-elb
#  labels:
#    app: osmt-app-elb
#spec:
#  type: LoadBalancer
#  selector:
#    app: osmt-app
#  ports:
#    - port: 80
#      protocol: TCP
#      targetPort: 8080
#      name: "ui"